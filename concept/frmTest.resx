<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Next.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAABGCAYAAAAHFFAPAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsTAAALEwEAmpwYAAADCUlE
        QVR4Xu3dQUiTcRzGcVtqWkqshRhiwSC0DAlPEQQzvZTJihJPOSMPES0IKxMsRTqUJhUsCYSwKCnxsCTx
        FBHhIcIMMoISKTpIBV3qkLq9v57f7NJyCzq9+/EMPrxs7P9evu97frJEhAxb9keyY9kfyY4/v+AjzmsR
        5y1Mw6Q4zgQ8Jdd6LE58DNeHuD6Afg2ZCzmQnRx4hUYV5zn+iMPxcRiGu+RS8diAOLE+XLtx7ZL37zo0
        pA+8UPhXYMd5goOjoE/DAA72QBe51WIrHJbYQr18mD0k0WiThiwHP5QkB17pxEcQ9iYOX8LBNhxshoPk
        WjWyOF8mnz5ukfGxHXKlt0ZD1sBOqEwOnJ14axc74CgO75XY/DbcoJTc6meBzM4UIO4GuXa1XMLhKg3Z
        Ao1Qmxw4Jx6PIO4piS8cQNwq3MALHnKpL3MemXi2WgZvFcmF834JhSo0ZCechMbkwLkMnFlSBI6ARm5J
        DryKgTNLisC3oRfCDJzhUgS+D9ehlYEzHAMbx8DGMbBxDGwcAxvHwMYxsHEMbBwDG8fAxjGwcQxsHAMb
        x8DGMbBxDGwcAxvHwMYxsHEMbBwDG8fAxjGwcQxsHAMbx8DGMbBxDGwcAxvHwMYxsHEMbBwDG8fAxjGw
        cQxsHAMbx8DGMbBxDGwcAxvHwMYxsHEMbBwDG8fAxjGwcQxsHAMb9x+B+ySWmNTZhRsUy7evHpmdIbd6
        +cIjI8P50nPZJ+ETG6WhoSx9YCd2EW9wUD7PbZWpSZ+MRvPlzmAeuVR/JE/az62RI81eCQaLpTqwKX3g
        H9+75c30fnk0Wik3IiXS3uaV48fWkks1hwqlrq5QAgEvaGB/+sCvps7K0L2gdHVul1BTqdTW+nBwHbna
        elh6e6sDm9MHHhpqkjOnd0v9vi2JA4FAKbncUlh/Iu4/A0MRVMAeCIMOLOnQUhTGyfW0U8phLB0W1u1Z
        nSfVBUsdOdSJNJ1K00P6ZJC7aaeU03a6Gq3Dwro9q/OkumCpI4f6Z30i9LUnd9NOv8cpsxp/AQV58zT/
        GsirAAAAAElFTkSuQmCC
</value>
  </data>
</root>